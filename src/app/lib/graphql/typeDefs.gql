scalar Date
scalar DateTime
scalar Hex
scalar Json
scalar Long
scalar RGBAHue
scalar RGBATransparency
scalar RichTextAST

enum Locale {
	en_US
	es_MX
}

enum Stage {
	DRAFT
	PUBLISHED
}

enum Kind  {
	MEMBER
	PUBLIC
	PAT
}

# input ProjectWhereInput {
# 	title: String
# 	description: [String]
# 	active: Boolean
# 	link: String
# 	techStack: String
# 	sourceCode: [String]
# 	version: Float
# 	screenShots: [Asset]
# 	createdAt: DateTime
# 	updatedAt: DateTime
# 	stage: Stage
# }

# input ProjectCreateInput {
# 	title: String!
# 	description: [String]!
# 	active: Boolean!
# 	link: String
# 	techStack: String
# 	sourceCode: [String]!
# 	version: Float!
# 	screenShots: [Asset]!
# }

# input ProjectWhereUniqueInput {
# 	id: ID
# 	title: String
# 	active: Boolean
# 	link: String
# }

union SearchResult = Project | User | Asset
union ProjectInput = ProjectWhereInput | ProjectWhereUniqueInput | ProjectCreateInput

# type Query {
# 	projects: [Project]!
# 	project(where: ProjectInput!): Project
# 	projectsConnection(where: ProjectInput!, stage: Stage): [SearchResult]!
# 	history(limit: Int): [SearchResult]!
# 	screenShots(first: Int): [Asset]!
# }

# type Mutation {
# 	createProject(newProject: ProjectInput!): Project!
# }
