scalar Date
scalar DateTime
scalar URL
scalar JSON
scalar Locale

enum Stage {
	DRAFT
	PUBLISHED
}

interface Node {
  id: ID!
  stage: Stage!
}

type Asset implements Node {
  	id: ID!
	stage: Stage!
  	fileName: String!
  	handle: String!
  	mimeType: String!
  	width: Float!
  	height: Float!
  	size: Float
  	createdAt: DateTime!
  	updatedAt: DateTime

}

type Project implements Node {
  	id: ID!
	stage: Stage!
  	title: String!
  	description: [String!]
	active: Boolean!
  	link: URL!
  	techStack: JSON!
  	sourceCode: [URL!]
  	version: Float!
  	screenShots: [Asset]
  	createdAt: DateTime!
  	updatedAt: DateTime
	locale: Locale!
}

input ProjectInput {
	title: String!
  	description: [String!]
	active: Boolean!
  	link: URL
  	techStack: JSON!
  	sourceCode: [URL!]
  	version: Float!
  	screenShots: [Asset]
	createdAt: DateTime
  	updatedAt: DateTime
}

type Query {
  	allProjects: [Project!]
  	projectById(id: ID!): Project!
}

type Mutation {
	createProject(newProject: ProjectInput!): Project!
	updateProject(projectFields: ProjectInput): Project!
	deleteProject(id: ID!) Project!
}
