scalar Date
scalar DateTime
scalar JSON
scalar URL

enum Locale {
	en_US
	en_CA
	en_UK
}

enum Stage {
	DRAFT
	PUBLISHED
}

interface Node {
	id: ID!
	stage: Stage!
}

type Asset implements Node {
	id: ID!
	url: URL!
	fileName: String!
	handle: String!
	mimeType: String!
	width: Float!
	height: Float!
	size: Float
	createdAt: DateTime!
	updatedAt: DateTime
	locale: Locale!
	stage: Stage!
}

type Project implements Node {
	id: ID!
	title: String!
	description: [String]
	active: Boolean!
	link: URL!
	techStack: JSON
	sourceCode: [URL]
	version: Float!
	screenShots: [Asset]!
	createdAt: DateTime!
	updatedAt: DateTime
	locale: Locale!
	stage: Stage!
}

# input ProjectWhereInput {

# }

# input ProjectCreateInput {

# }

# input ProjectWhereUniqueInput {

# }

# type Query {
#   	allProjects: [Project!]
#   	projectById(id: ID!): Project!
# }

# type Mutation {
# 	createProject(newProject: ProjectInput!): Project!
# 	updateProject(projectFields: ProjectInput): Project!
# 	deleteProject(id: ID!) Project!
# }
